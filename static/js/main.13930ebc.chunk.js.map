{"version":3,"sources":["components/bottomNavigation/BottomNavigation.tsx","components/header/Header.tsx","pages/Films/Films.tsx","pages/Search/Search.tsx","reducers/creditReducer.tsx","reducers/trendingItemsReducer.tsx","components/popup/DetailedInformation.tsx","constant/index.ts","components/movieItem/MovieItem.tsx","api/Api.tsx","components/pagination/Pagination.tsx","pages/Trending/Trending.tsx","pages/TVSerials/TvSerials.tsx","App.tsx","reportWebVitals.ts","store.ts","index.tsx"],"names":["LabelBottomNavigation","React","value","setValue","navigate","useNavigate","BottomNavigation","sx","width","left","bottom","display","position","backgroundColor","zIndex","onChange","event","newValue","BottomNavigationAction","style","color","label","icon","Header","className","MostPopularFilms","Search","SET_CREDITS","defaultState","items","isFetching","CreditReducer","state","action","type","payload","SET_FILMS","SET_IS_FETCHING","SET_TOTAL_PAGES","adult","backdrop_path","genre_ids","id","media_type","original_language","original_title","overview","popularity","poster_path","release_date","title","video","vote_average","vote_count","first_air_date","name","origin_country","original_name","total_pages","total_results","setTrendingItems","films","setIsFetching","setTotalPages","totalPages","TrendingItemsReducer","DetailedInformation","props","trigger","modal","nested","close","onClick","src","alt","console","log","MovieItem","useState","setId","mediaType","setMediaType","dispatch","useDispatch","credit","useSelector","credits","useEffect","a","axios","get","response","data","getCredits","trendingItems","map","e","handleChange","Badge","fontSize","height","borderRadius","badgeContent","BasicPagination","Stack","spacing","Pagination","count","marginBottom","marginTop","justifyContent","variant","page","hideNextButton","hidePrevButton","Trending","setPage","results","getTrendingItems","TvSerials","App","path","element","Films","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","filmsReducer","creditReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13930ebc.chunk.js","sourcesContent":["import MovieIcon from '@mui/icons-material/Movie';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport TvIcon from '@mui/icons-material/Tv';\r\nimport WhatshotIcon from '@mui/icons-material/Whatshot';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport * as React from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\n\r\nexport default function LabelBottomNavigation() {\r\n    const [value, setValue] = React.useState('/');\r\n    let navigate = useNavigate();\r\n\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n\r\n        setValue(newValue);\r\n        if (newValue === \"/\") {\r\n            navigate('/')\r\n        }\r\n        if (newValue === \"Films\") {\r\n            navigate('/films')\r\n        }\r\n        if (newValue === \"TV Serials\") {\r\n            navigate('/tvSerials')\r\n        }\r\n        if (newValue === \"Search\") {\r\n            navigate('/search')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation\r\n            sx={{\r\n                width: \"100%\",\r\n                left: \"0\",\r\n                bottom: \"0\",\r\n                display: \"flex\",\r\n                position: \"fixed\",\r\n                backgroundColor: \"black\",\r\n                zIndex: \"100\"\r\n            }}\r\n            value={value}\r\n            onChange={handleChange}>\r\n            <BottomNavigationAction\r\n                style={{\r\n                    color: \"#f9004d\"\r\n                }}\r\n                label=\"Trending\"\r\n                value=\"/\"\r\n                icon={<WhatshotIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                style={{\r\n                    color: \"#f9004d\"\r\n                }}\r\n                label=\"Films\"\r\n                value=\"Films\"\r\n                icon={<MovieIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                style={{\r\n                    color: \"#f9004d\"\r\n                }}\r\n                label=\"TV Serials\"\r\n                value=\"TV Serials\"\r\n                icon={<TvIcon />}\r\n            />\r\n            <BottomNavigationAction\r\n                style={{\r\n                    color: \"#f9004d\"\r\n                }}\r\n                label=\"Search\"\r\n                value=\"Search\"\r\n                icon={<SearchIcon />} />\r\n        </BottomNavigation>\r\n    );\r\n}\r\n\r\n","import \"./Header.css\"\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\" >\r\n            <div className=\"headerWrapper\" >\r\n                Newshinsky Movie Search\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\r\nconst MostPopularFilms = () => {\r\n    return (\r\n        <div>\r\n         films\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MostPopularFilms\r\n","const Search = () => {\r\n    return (\r\n        <div>\r\n          Search  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import { ActionsType } from \"../App\"\r\n\r\nconst SET_CREDITS = \"SET_CREDITS \"\r\n\r\n\r\nexport type defaultStateType = {\r\n    items: any,\r\n    isFetching: boolean,\r\n\r\n}\r\n\r\nconst defaultState = {\r\n    items: [],\r\n    isFetching: false,\r\n}\r\n\r\n\r\n\r\n\r\nconst CreditReducer = (state: any = defaultState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case SET_CREDITS:\r\n            return {\r\n                ...state, items: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setCredits = (credits: any) => {\r\n    return {\r\n        type: SET_CREDITS,\r\n        payload: credits\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default CreditReducer\r\n\r\n","import { ActionsType } from \"../App\"\r\n\r\nconst SET_FILMS = \"SET_FILMS\"\r\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\"\r\nconst SET_TOTAL_PAGES = \"SET_TOTAL_PAGES\"\r\n\r\n\r\nexport type TrendingItemsType = {\r\n    adult?: boolean\r\n    first_air_date?: string\r\n    backdrop_path: string\r\n    genre_ids?: Array<number>\r\n    name?: string\r\n    id?: number\r\n    media_type?: \"movie\" | \"tv\"\r\n    original_language?: string\r\n    original_title?: string\r\n    origin_country?: Array<string>\r\n    original_name?: string\r\n    overview?: string\r\n    popularity?: number\r\n    poster_path?: string\r\n    release_date?: string\r\n    title?: string\r\n    video?: false\r\n    vote_average?: number\r\n    vote_count?: number\r\n}\r\n\r\nexport type defaultStateType = {\r\n    items: Array<TrendingItemsType>,\r\n    isFetching: boolean,\r\n    total_pages: number,\r\n    total_results: number,\r\n}\r\n\r\nconst defaultState = {\r\n    items: [{\r\n        adult: false,\r\n        backdrop_path: \"/70nxSw3mFBsGmtkvcs91PbjerwD.jpg\",\r\n        genre_ids: [878, 28, 12],\r\n        id: 580489,\r\n        media_type: \"movie\",\r\n        original_language: \"en\",\r\n        original_title: \"Venom: Let There Be Carnage\",\r\n        overview: \"After finding a host body in investigative reporter Eddie Brock, the alien symbiote must face a new enemy, Carnage, the alter ego of serial killer Cletus Kasady.\",\r\n        popularity: 4141.331,\r\n        poster_path: \"/rjkmN1dniUHVYAtwuV3Tji7FsDO.jpg\",\r\n        release_date: \"2021-09-30\",\r\n        title: \"Venom: Let There Be Carnage\",\r\n        video: false,\r\n        vote_average: 6.8,\r\n        vote_count: 2039,\r\n    }, {\r\n        backdrop_path: \"/ikN8ABD9pXHuW4JFqTE,Hr3ae8rd.jpg\",\r\n        first_air_date: \"2021-11-19\",\r\n        genre_ids: [18, 80, 9648, 10765],\r\n        id: 106651,\r\n        media_type: \"tv\",\r\n        name: \"Hellbound\",\r\n        origin_country: ['KR'],\r\n        original_language: \"ko\",\r\n        original_name: \"지옥\",\r\n        overview: \"Unearthly beings deliver bloody condemnations, sending individuals to hell and giving rise to a religious group founded on the idea of divine justice.\",\r\n        popularity: 273.255,\r\n        poster_path: \"/5NYdSAnDVIXePrSG2dznHdiibMk.jpg\",\r\n        vote_average: 8,\r\n        vote_count: 71,\r\n    }],\r\n    isFetching: false,\r\n    total_pages: 1,\r\n    total_results: 1,\r\n}\r\n\r\n\r\n\r\n\r\nconst TrendingItemsReducer = (state: any = defaultState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case SET_FILMS:\r\n            return {\r\n                ...state, items: action.payload\r\n            }\r\n        case SET_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.payload\r\n            }\r\n        case SET_TOTAL_PAGES:\r\n            return {\r\n                ...state, total_pages: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setTrendingItems = (films: Array<TrendingItemsType>) => {\r\n    return {\r\n        type: SET_FILMS,\r\n        payload: films\r\n    }\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: SET_IS_FETCHING,\r\n        payload: isFetching\r\n    }\r\n}\r\nexport const setTotalPages = (totalPages: number) => {\r\n    return {\r\n        type: SET_TOTAL_PAGES,\r\n        payload: totalPages\r\n    }\r\n}\r\n\r\n\r\nexport default TrendingItemsReducer\r\n\r\n","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport \"./../movieItem/Movieitem.css\"\r\nimport { IMAGE_780PX } from \"./../../constant/index\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    title: string\r\n    name: string\r\n    overview: string\r\n    backdrop_path: string\r\n\r\n}\r\n\r\nexport const DetailedInformation = (props: PropsType) => (\r\n\r\n    <Popup\r\n        trigger={<button className=\"btn\"> More information </button>}\r\n        modal\r\n        nested\r\n    >\r\n        {(close: any) => (\r\n            <div className=\"modal\">\r\n                <button className=\"close\" onClick={close}>\r\n                    &times;\r\n                </button>\r\n                <div className=\"headerPopUp\">\r\n                    <h2>{props.name} {props.title} </h2>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <img src={`${IMAGE_780PX}${props.backdrop_path}`} alt=\"poster_photo\" />\r\n                    <p> {props.overview}</p>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                            console.log('modal closed ');\r\n                            close();\r\n                        }}\r\n                    >\r\n                        Hide\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )}\r\n    </Popup>\r\n);\r\n\r\n","import React from \"react\"\r\n\r\n\r\nexport const IMAGE_500PX = \"https://image.tmdb.org/t/p/w500\"\r\nexport const IMAGE_300PX = \"https://image.tmdb.org/t/p/w300\"\r\n\r\nexport const IMAGE_780PX = \"https://image.tmdb.org/t/p/w780\"","import Badge from '@mui/material/Badge';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCredits } from '../../api/Api';\r\nimport { TrendingItemsType } from \"../../reducers/trendingItemsReducer\";\r\nimport { RootStoreType } from '../../store';\r\nimport { DetailedInformation } from '../popup/DetailedInformation';\r\nimport { IMAGE_300PX } from \"./../../constant/index\";\r\nimport \"./Movieitem.css\";\r\n\r\ntype PropsType = {\r\n    trendingItems: Array<TrendingItemsType>\r\n}\r\n\r\n\r\nconst MovieItem = (props: PropsType) => {\r\n\r\n    const [id, setId] = useState(1)\r\n    const [mediaType, setMediaType] = useState(\"tv\")\r\n    const dispatch = useDispatch()\r\n    const credit = useSelector<RootStoreType, any>(state => state.credits)\r\n    useEffect(() => {\r\n        dispatch(getCredits(mediaType, id))\r\n    }, [dispatch, mediaType, id])\r\n\r\n\r\n\r\n    function handleChange(mediaType: string, id: number) {\r\n        setMediaType(mediaType)\r\n        setId(id)\r\n    }\r\n\r\n    console.log(credit)\r\n\r\n    return (\r\n        <div className=\"item\">\r\n            {props.trendingItems.map(\r\n                (e: TrendingItemsType) =>\r\n                    <div onClick={() => { handleChange(e.media_type!, +e.id!) }} className=\"card\">\r\n                        <Badge\r\n                            sx={{ \"& .MuiBadge-badge\": { fontSize: 15, height: 50, width: 50, borderRadius: 50, left: 100 } }}\r\n                            badgeContent={e.vote_average}\r\n                            color={e.vote_average! < 7 ? \"error\" : \"success\"}\r\n                        >\r\n                        </Badge>\r\n                        <div className=\"cardPhoto\">\r\n                            <img src={`${IMAGE_300PX}${e.poster_path}`} alt=\"poster_photo\" />\r\n                        </div>\r\n                        <div className=\"cardName\">\r\n                            <h3> {e.name} {e.title} </h3>\r\n                        </div>\r\n                        <div className=\"cardInfo\">\r\n                            <div className={e.media_type === \"tv\" ? \"tvIcon \" : \"movieIcon\"} > {e.media_type} </div>\r\n                            <div className=\"dateIcon\"> {e.release_date} {e.first_air_date}</div>\r\n                        </div>\r\n                        <DetailedInformation\r\n                            name={e.name!}\r\n                            title={e.title!}\r\n                            id={+e.id!}\r\n                            overview={e.overview!}\r\n                            backdrop_path={e.backdrop_path!}\r\n            \r\n                        />\r\n                    </div>\r\n            )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MovieItem\r\n","import axios from \"axios\"\r\nimport { Dispatch } from \"react\"\r\nimport { ActionsType } from \"../App\"\r\nimport { setCredits } from \"../reducers/creditReducer\"\r\nimport { setIsFetching, setTotalPages, setTrendingItems } from \"../reducers/trendingItemsReducer\"\r\n\r\n\r\n\r\n\r\nexport const getTrendingItems = (page: number = 1) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setIsFetching(true))\r\n        const response = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=608329abc630183c887c6609a400ceab&page=${page}`)\r\n        dispatch(setTrendingItems(response.data.results))\r\n        dispatch(setTotalPages(response.data.total_pages))\r\n        dispatch(setIsFetching(false))\r\n    }\r\n}\r\n\r\n\r\nexport const getCredits = (media_type: string, id: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        const response = await axios.get(`https://api.themoviedb.org/3/${media_type}/${id}/credits?api_key=608329abc630183c887c6609a400ceab&language=en-US`)\r\n        dispatch(setCredits(response.data))\r\n    }\r\n}\r\n","import Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\nimport * as React from 'react';\r\n\r\n\r\n\r\ntype PropsType = {\r\n    totalPages: number,\r\n    page: number,\r\n    handleChange: (event: React.ChangeEvent<unknown>, value: number) => void\r\n}\r\n\r\nexport default function BasicPagination(props: PropsType) {\r\n    return (\r\n        <Stack spacing={2}  >\r\n            <Pagination count={props.totalPages}\r\n                style={{\r\n                    backgroundColor: \"black\",\r\n                    color: \"color\",\r\n                    marginBottom: \"100px\",\r\n                    marginTop: \"20px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }\r\n                }\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                page={props.page}\r\n                onChange={props.handleChange}\r\n                hideNextButton\r\n                hidePrevButton\r\n            />\r\n        </Stack >\r\n    );\r\n}","\r\nimport { ChangeEvent, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getTrendingItems } from \"../../api/Api\"\r\nimport MovieItem from \"../../components/movieItem/MovieItem\"\r\nimport Pagination from \"../../components/pagination/Pagination\"\r\n\r\nimport { TrendingItemsType } from \"../../reducers/trendingItemsReducer\"\r\nimport { RootStoreType } from \"../../store\"\r\n\r\n\r\nconst Trending = () => {\r\n    const dispatch = useDispatch()\r\n    const trendingItems = useSelector<RootStoreType, Array<TrendingItemsType>>(state => state.films.items)\r\n    const isFetching = useSelector<RootStoreType, boolean>(state => state.films.isFetching)\r\n    const totalPages = useSelector<RootStoreType, number>(state => state.films.total_pages)\r\n    const [page, setPage] = useState(1)\r\n    \r\n    useEffect(() => {\r\n        dispatch(getTrendingItems(page))\r\n    }, [dispatch, page])\r\n\r\n    const handleChange = (event: ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n    };\r\n\r\n    if (isFetching) {\r\n        return (\r\n            <div>...Waiting</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <MovieItem trendingItems={trendingItems} />\r\n            <div>\r\n                <Pagination\r\n                    totalPages={totalPages}\r\n                    page={page}\r\n                    handleChange={handleChange}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Trending\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const TvSerials = () => {\r\n    return (\r\n        <div>\r\n            TvSerials\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TvSerials\r\n","import React from 'react';\nimport { Route, Routes } from 'react-router';\nimport './App.css';\nimport BottomNavigation from './components/bottomNavigation/BottomNavigation';\nimport Header from './components/header/Header';\nimport Films from './pages/Films/Films';\nimport Search from './pages/Search/Search';\nimport Trending from './pages/Trending/Trending';\nimport TvSerials from './pages/TVSerials/TvSerials';\nimport { setCredits } from './reducers/creditReducer';\nimport { setIsFetching, setTotalPages, setTrendingItems } from './reducers/trendingItemsReducer';\n\n\nexport const ApiKEY = \"608329abc630183c887c6609a400ceab\"\n\nexport type ActionsType =\n  ReturnType<typeof setTrendingItems> |\n  ReturnType<typeof setIsFetching> |\n  ReturnType<typeof setTotalPages> |\n  ReturnType<typeof setCredits>\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <Header />\n          <Routes>\n            <Route path=\"/\" element={<Trending />} />\n            <Route path=\"/tvSerials\" element={<TvSerials />} />\n            <Route path=\"/films\" element={<Films />} />\n            <Route path=\"/search\" element={<Search />} />\n            <Route path=\"*\" element={<Trending />} />\n          </Routes>\n          <BottomNavigation />\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers } from \"redux\"\r\nimport { createStore } from \"redux\"\r\nimport filmsReducer from \"./reducers/trendingItemsReducer\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\"\r\nimport creditReducer from \"./reducers/creditReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    films: filmsReducer,\r\n    credits: creditReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport type RootStoreType = ReturnType<typeof rootReducer>\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ BrowserRouter >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}